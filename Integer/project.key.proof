\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Apr 07 15:12:44 CEST 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:javaSemantics , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , javaLoopTreatment-javaLoopTreatment\\:efficient , methodExpansion-methodExpansion\\:modularOnly
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\settings {
"#Proof-Settings-Config-File
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_O
[Choice]intRules-intRules\:javaSemantics"
}

\programVariables {
  int x;
}
\problem {
   x = java.lang.Integer.MAX_VALUE
-> \<{
       x=x+1;
     }\>   x
         = sub(neg(java.lang.Integer.MAX_VALUE),
               Z(1(#)))

}

\proof {
(keyLog "0" (keyUser "ojab" ) (keyVersion "666bcb0c95"))

(autoModeTime "59")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1"))
(rule "neg_literal" (formula "1") (term "0,1,0,1"))
(rule "sub_literals" (formula "1") (term "1,0,1"))
(rule "impRight" (formula "1"))
(rule "assignmentAdditionInt" (formula "2"))
(rule "translateJavaAddInt" (formula "2") (term "0,0"))
(rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "1"))
(rule "expand_addJint" (formula "2") (term "0,0"))
(rule "add_literals" (formula "2") (term "0,0,0"))
(rule "expand_moduloInteger" (formula "2") (term "0,0"))
(rule "replace_int_RANGE" (formula "2") (term "1,1,0,0"))
(rule "replace_int_HALFRANGE" (formula "2") (term "0,0,1,0,0"))
(rule "replace_int_MIN" (formula "2") (term "0,0,0"))
(rule "add_literals" (formula "2") (term "0,1,0,0"))
(rule "mod_axiom" (formula "2") (term "1,0,0"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
(rule "div_literals" (formula "2") (term "0,1,1,0,0"))
(rule "mul_literals" (formula "2") (term "1,1,0,0"))
(rule "add_literals" (formula "2") (term "1,0,0"))
(rule "add_zero_right" (formula "2") (term "0,0"))
(rule "emptyModality" (formula "2") (term "1"))
 (builtin "One Step Simplification" (formula "2"))
(rule "closeTrue" (formula "2"))
)
}
